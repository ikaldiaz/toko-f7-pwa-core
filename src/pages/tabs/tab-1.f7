<template>
    <div class="tab-content" data-name="home">
      <div class="block-title">Tabs 1</div>
      <div class="block block-strong">
        <p>This is an example of tabs-layout application. The main point of such tabbed layout is that each tab contains independent view with its own routing and navigation.</p>

        <p>Each tab/view may have different layout, different navbar type (dynamic, fixed or static) or without navbar like this tab.</p>
      </div>
      <div class="block-title">Navigation</div>
      <div class="block-title">
        ${session ? $h`
          ${session.user.email}
          ` : $h` 

          `}
      </div>
      
      <div class="list">
        <ul>
          ${session ? $h`
          <li>
            <a href="#" class="item-content item-link logout-btn" @click="${logOut}">
              <div class="item-inner">
                <div class="item-title">Logout</div>
              </div>
            </a>
          </li>
          ` : $h`
          <li>
            <a href="#" class="item-content item-link" @click="${signinCall}">
              <div class="item-inner">
                <div class="item-title">Login from Root App</div>
              </div>
            </a>
          </li>
          <li>
            <a href="#" class="item-content item-link" @click="${signupCall}">
              <div class="item-inner">
                <div class="item-title">Register from Root App</div>
              </div>
            </a>
          </li>
          `}
          <li>
            <a href="/ex-card/1/" class="item-content item-link">
              <div class="item-inner">
                <div class="item-title">Expandable Card</div>
              </div>
            </a>
          </li>
          <li>
            <a href="/about/" class="item-content item-link">
              <div class="item-inner">
                <div class="item-title">About</div>
              </div>
            </a>
          </li>
          <li>
            <a href="/form/" class="item-content item-link">
              <div class="item-inner">
                <div class="item-title">Form</div>
              </div>
            </a>
          </li>
        </ul>
      </div> 

      <div class="block-title">Modals</div>
      <div class="block block-strong">
        <div class="row">
          <div class="col-50">
            <a href="#" class="button button-raised button-fill popup-open" data-popup="#my-popup">Popup</a>
          </div>
          <div class="col-50">
            <a href="#" class="button button-raised button-fill login-screen-open" data-login-screen="#my-login-screen">Login Screen</a>
          </div>
        </div>
      </div>

      <div class="list links-list">
        <ul>
          <li>
            <a href="/dynamic-route/blog/45/post/125/?foo=bar#about">Dynamic (Component) Route</a>
          </li>
          <li>
            <a href="/load-something-that-doesnt-exist/">Default Route (404)</a>
          </li>
          <li>
            <a href="/request-and-load/user/123456/">Request Data & Load</a>
          </li>
        </ul>
      </div>
      
    </div>
</template>
<!-- component styles -->
<!-- <style>
  .red-link {
    color: red;
  }
</style> -->
<!-- rest of component logic -->
<script>
  
  import { supabase, signOut } from '../../js/supabase.js';
  // script must return/export component function
  export default (props, { $, $f7, $f7router, $on, $onMounted, $update }) => {
    const session = supabase.auth.session();

    const signinCall = ()=>{
      $f7.loginScreen.open('#root-login-screen', true);
    }

    const signupCall = ()=>{
      $f7.loginScreen.open('#root-register-screen', true);
    }

    const logOut = () => {
      $f7.dialog.confirm(
        'Are you sure you want to Logout?',
        function () {
          $f7.progressbar.show('multi');
          signOut()
          .then((error)=>{
            console.log(error);
            $f7.progressbar.hide();
            $f7router.refreshPage()
          });
        },
        function () {
          $f7.progressbar.hide();
          // stay on page
        }
      )
    }

    $onMounted(() => {      
      console.log('tab-1 onMounted', session);

      $('.tab-link-1').removeClass('tab-link-active')
      console.log('onMount Tab 1');
      $('.tab-link-1').addClass('tab-link-active')

      
    });

    // component function must return render function
    return $render;
  }
</script>