<template>
    <div class="page no-toolbar no-navbar no-swipeback">
      <div class="page-content login-screen-content">
        <div class="x-login-screen">
          <a href="#" class="button button-fill" @click="${closeLogin}">
            <i class="material-icons">close</i>
          </a>
        </div>
        <img data-src="icons/favicon.png" class="lazy lazy-fade-in logo-lazy" width="300" height="300" />
        <div class="login-screen-title">Login</div>
        <form>
          <div class="list">
            <ul>
              <li class="item-content item-input">
                <div class="item-inner">
                  <div class="item-title item-label">Email</div>
                  <div class="item-input-wrap">
                    <input type="text" name="email" placeholder="Your Email" value="${username}" @input="${updateUsername}" />
                  </div>
                </div>
              </li> 
              <li class="item-content item-input">
                <div class="item-inner">
                  <div class="item-title item-label">Password</div>
                  <div class="item-input-wrap">
                    <input type="password" name="password" placeholder="Your password" value="${password}" @input="${updatePassword}"  />
                  </div>
                </div>
              </li>
            </ul>
          </div>
          <div class="list inset block">
            <ul>
              <li>
                <a href="#" id="signin-button" class="button button-large button-fill 
                ${isValid ? '' : 'disabled'} 
                button-preloader 
                ${isLoading ? 'button-loading' : ''}"
                 @click="${signIn}">
                 <span class="preloader"></span>
                 <span>Sign In</span>
                </a>
              </li>
            </ul>
            <div class="block-footer">
              <p>Not registered yet?</p>
            </div>
            <ul>
              <li>
                <a href="/register/" class="button button-large button-fill">Register</a>
              </li>
            </ul>
          </div>
        </form>
      </div>
    </div>
  </template>
  <style>
  /* Screen Login */
  /* .x-login-screen{
    position:absolute;
    top:10px;
    right:10px;
  }
  img.logo-lazy {
    width: auto;
    height: 20%;
    display: block;
    margin-top: 30px;
    margin-left: auto;
    margin-right: auto;
  } */
  </style>
  <script>
    import { supabase, signIn, isEmailAddress } from '../js/supabase.js';

    // async function signUpWithEmail(emailx, passx) {
    //   const { user, session, error } = await supabase.auth.signUp({
    //     email: emailx,
    //     password: passx,
    //   })

    //   if(!error) {
    //     console.log('success')
    //     return user
    //   }else{
    //     console.log('error');
    //     return error
    //   }
    //   console.log(user)
    //   console.log(session)
    // }


    export default function (props, { $, $f7, $store, $f7router, $onMounted, $update }) {

      // Login screen demo data
      let username = '';
      let password = '';
      let isLoading = false;
      let isValid = false;
  
      
  
      const updateUsername = (e) => {
        username = e.target.value;
        isValid = isEmailAddress(username) && password.length>8;
        isValid ? $('#signin-button').removeClass('disabled') : $('#signin-button').addClass('disabled');
        $update();
      }
      const updatePassword = (e) => {
        password = e.target.value;
        
        isValid = isEmailAddress(username) && password.length>8;
        isValid ? $('#signin-button').removeClass('disabled') : $('#signin-button').addClass('disabled');
        $update();
      }
  
      const client = $store.getters.client;
      


      const signIn = async () => {
        console.log(username)
        console.log(password)


        isLoading =true;
        $update()
        const { user, session, error } = await supabase.auth.signIn({
          email: username,
          password: password,
        })
            

        if(!error) {
          isLoading =false;
          $update()
          console.log('success')
          console.log('if not error',user)
          console.log('if not error',session)
          $f7.dialog.alert('Yohooo, ' + user.email, () => {
            // $f7.loginScreen.close();
            $f7router.back('/');
           });
        }else{
          isLoading =false;
          $update()
          console.log('error');
          console.log(error);
        }
        console.log(user)
        console.log(session)
        // return user;
      }

      const closeLogin = () => {
        $f7router.navigate('/',{
          // re
        });
      }
  
      // Lifecycle
      $onMounted(() => {
        supabase.auth.onAuthStateChange((event, session) => {
          console.log(event, session)
        })
  
      });
  
      // Return render function
      return $render;
    }
  </script>